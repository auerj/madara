#ifndef   _FILTERS_MYFILTER_H_
#define   _FILTERS_MYFILTER_H_

#include <string>

#include "madara/filters/AggregateFilter.h"

namespace filters
{
  /**
  * A stateful filter generated by gpc.pl
  **/
  class MyFilter : public madara::filters::AggregateFilter
  {
  public:
    /**
     * Constructor
     **/
    MyFilter ();

    /**
     * Destructor
     **/
    virtual ~MyFilter ();

    /**
     * The method that filters incoming or outgoing 
     * @param   records           the aggregated packet being evaluated
     * @param   transport_context context for querying transport state
     * @param   vars              context for querying current program state
     **/
    virtual void filter (madara::knowledge::KnowledgeMap & records,
      const madara::transport::TransportContext & transport_context,
      madara::knowledge::Variables & vars);
      
  protected:
    /**
     * any variables needed for filtering decisions can go here. Note that
     * the knowledge base will be provided via the filter method's Variables
     * input.
     **/
  };

} // end filters namespace

#endif // _FILTERS_MYFILTER_H_
